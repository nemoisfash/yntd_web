<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:context="http://www.springframework.org/schema/context" 
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd 
                        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd 
                        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
                        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
                        
	<context:property-placeholder ignore-unresolvable="true" location="classpath:conf.properties" />
	
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
		<property name="driverClassName" value="${master.driver}" />
		<property name="url" value="${master.url}" />
		<property name="username" value="${master.username}" />
		<property name="password" value="${master.password}" />
		<property name="initialSize" value="1" />
		<property name="minIdle" value="1" />
		<property name="maxActive" value="20" />
		<property name="maxWait" value="60000" />
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
	</bean>
	
	<!--<bean id="slave" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
		<property name="driverClassName" value="${slave.driver}" />
		<property name="url" value="${slave.url}" />
	 <property name="username" value="root" />
		<property name="password" value="root" /> 
		<property name="initialSize" value="1" />
		<property name="minIdle" value="1" />
		<property name="maxActive" value="20" />
		<property name="maxWait" value="60000" />
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		 <property name="poolPreparedStatements" value="true" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
	</bean>
	<bean id="dataSource" class="net.chenke.playweb.support.dynamicDataSource.DynamicDataSource">
		<property name="defaultTargetDataSource" ref="master"></property>
		 <property name="targetDataSources">  
            <map key-type="java.lang.String">
                <entry value-ref="master" key="master"></entry>  
                <entry value-ref="slave" key="slave"></entry>
            </map>  
		</property>
	</bean> -->
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:sqlmap-config.xml" />
		<property name="mapperLocations">
			<array>
				<value>classpath:cn/hxz/**/mapper/*.xml</value>
				<value>classpath:org/tdds/**/mapper/*.xml</value>
			</array>
		</property>
		<property name="plugins">
			<array>
				<bean class="com.github.pagehelper.PageInterceptor">
					<property name="properties">
						<value>
							helperDialect=mysql
							offsetAsPageNum=true
							rowBoundsWithCount=true
						</value>
					</property>
				</bean>
			</array>
		</property>
	</bean>
	
	 <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">  
        <constructor-arg index="0" ref="sqlSessionFactory" />  
    </bean>  

	<bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
		<property name="basePackage">
			<value>
				cn.hxz.**.mapper
				org.tdds.**.mapper
			</value>
		</property>
		<property name="properties">
			<value>
				mappers=net.chenke.playweb.support.mybatis.DynaMapper
			</value>
		</property>
	</bean>
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
<!-- 	<bean id="dataSwitchAop" class="net.chenke.playweb.support.dynamicDataSource.DataSwitchAop">
	</bean> -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
		<!-- <aop:aspectj-autoproxy expose-proxy="true"/>
		<aop:config>
		    <aop:aspect ref="dataSwitchAop" order="0">
		        <aop:pointcut id="dataSourcePointcut" expression="execution(* org.tdds.service.*Service..*(..))"/>
		        <aop:before method="intercept" pointcut-ref="dataSourcePointcut"/>
		        <aop:after method="clearDataSource" pointcut-ref="dataSourcePointcut"/>
		    </aop:aspect>
		</aop:config>
		<aop:aspectj-autoproxy proxy-target-class="true"/> -->
</beans>
