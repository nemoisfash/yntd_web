<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
                        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd 
                        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd ">

	<context:property-placeholder ignore-unresolvable="true" location="classpath:conf.properties" />

    <context:component-scan base-package="cn.hxz,org.tdds" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
    </context:component-scan>

    <mvc:default-servlet-handler/>
    
    <mvc:resources location="/data/" mapping="/data/**/*" order="0" />
    <mvc:resources location="/assets/" mapping="/assets/**/*" order="0" />
    <mvc:resources location="/themes/" mapping="/themes/**/*" order="0" />

	<mvc:annotation-driven validator="validator">
		<mvc:message-converters>
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<property name="supportedMediaTypes">
                    <list>
                        <value>html/plain;charset=UTF-8</value>
                    </list>
				</property>
			</bean>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>application/json;charset=UTF-8</value>
                    </list>
                </property>
                <property name="objectMapper">
                    <bean class="com.fasterxml.jackson.databind.ObjectMapper">
                        <property name="serializationInclusion" value="NON_NULL"/>
                    </bean>
                </property>
            </bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	
	<mvc:interceptors>
		<bean class="cn.hxz.webapp.syscore.support.SiteAwareInterceptor" />
		<bean class="net.chenke.playweb.support.spring.ResourceHidingInterceptor">
			<property name="includeUrls">
				<list>
					<value>^/views/.*</value>
				</list>
			</property>
        </bean>
	</mvc:interceptors>
    
	<bean id="shiroTags" class="net.chenke.playweb.support.freemarker.ShiroTags"/>
	<bean id="layoutTags" class="net.chenke.playweb.support.freemarker.LayoutTags"/>
	
    <bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="templateLoaderPath" value=""/>
        <property name="freemarkerSettings">
            <props>
            	<prop key="classic_compatible">false</prop>
                <prop key="template_update_delay">0</prop>
                <prop key="defaultEncoding">UTF-8</prop>
                <prop key="url_escaping_charset">UTF-8</prop>
                <prop key="locale">zh_CN</prop>
                <prop key="boolean_format">true,false</prop>
                <prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
                <prop key="date_format">yyyy-MM-dd</prop>
                <prop key="time_format">HH:mm:ss</prop>
                <prop key="number_format">0.##</prop>
                <prop key="whitespace_stripping">true</prop>
                <prop key="auto_import">
                    /WEB-INF/ftl/spring.ftl as spring
                </prop>
            </props>
        </property>
        <property name="freemarkerVariables">
            <map>
            	<entry key="shiro" value-ref="shiroTags" />
            	<entry key="layout" value-ref="layoutTags" />
            </map>
        </property>
    </bean>

    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
    	<property name="contentNegotiationManager">
			<bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
				<property name="ignoreAcceptHeader" value="true" />
				<property name="defaultContentType" value="text/html" />
				<property name="mediaTypes">
					<props>
						<prop key="json">application/json</prop>
					</props>
				</property>
			</bean>
    	</property>
        <property name="viewResolvers">
            <list>
				<bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
					<property name="prefix" value="/skins" />
					<property name="suffix" value=".html" />
					<property name="cache" value="false" />
					<property name="order" value="0" />
					<property name="cacheUnresolved" value="true" />
					<property name="exposePathVariables" value="true" />
					<property name="exposeRequestAttributes" value="true" />
					<property name="exposeSessionAttributes" value="true" />
					<property name="exposeSpringMacroHelpers" value="true" />
					<property name="contentType" value="text/html;charset=UTF-8" />
				</bean>
            </list>
        </property>
        <property name="defaultViews">
            <list>
                <bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" />
            </list>
        </property>
    </bean>
	
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="${allowedUploadSize}" />
    </bean>
    
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
	<property name="proxyTargetClass" value="true" />
</bean>
<!-- 	<bean id="jobFactory" class="cn.hxz.device.sensor.JobFactory"></bean>
	 <bean id="schedulerFactoryBean" class="org.springframework.scheduling.quartz.SchedulerFactoryBean"> 
	 <property name="jobFactory" ref="jobFactory"></property>
	 </bean> -->
	</beans>